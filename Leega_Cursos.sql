/* ESTEIRA DE AUTO CONHECIMENTO SQL - ESSENTIALS */

SHOW DATABASES;

CREATE DATABASE Leega_Cursos;

USE Leega_Cursos;

STATUS;

CREATE TABLE TIPO(
  ID_TIPO INT(20) PRIMARY KEY AUTO_INCREMENT,
  NM_TIPO VARCHAR(50) NOT NULL
);

CREATE TABLE INSTRUTOR(
  ID_INSTRUTOR INT(20) PRIMARY KEY AUTO_INCREMENT,
  NM_INSTRUTOR VARCHAR(50) NOT NULL,
  TELEFONE VARCHAR(15) NOT NULL
);

CREATE TABLE ALUNO(
  ID_ALUNO INT(20) PRIMARY KEY AUTO_INCREMENT,
  NM_ALUNO VARCHAR(40) NOT NULL,
  ENDERECO VARCHAR(50) NOT NULL,
  EMAIL VARCHAR(30)	NOT NULL				
);


/*
CREATE TABLE PEDIDO(
  IDPEDIDO INT(20) PRIMARY KEY AUTO_INCREMENT,
  FK_PEDIDO_ALUNO INT,
  DATA DATE,
  HORA TIME,
  FOREIGN KEY (FK_PEDIDO_ALUNO) REFERENCES ALUNO(IDALUNO) 
);
*/
CREATE TABLE PEDIDO(
  ID_PEDIDO INT(20) PRIMARY KEY AUTO_INCREMENT,
  FK_PEDIDO_ALUNO INT,
  DATA DATE,
  HORA TIME 
);

/*
CREATE TABLE CURSO(
  IDCURSO INT(20) PRIMARY KEY AUTO_INCREMENT,
  CURSO VARCHAR(30) NOT NULL,
  FK_CURSO_TIPO INT,
  FK_CURSO_INSTRUTOR INT,
  VALOR VARCHAR (1000) NOT NULL,
  FOREIGN KEY (FK_CURSO_TIPO) REFERENCES TIPO(IDTIPO),
  FOREIGN KEY (FK_CURSO_INSTRUTOR) REFERENCES INSTRUTOR(IDINSTRUTOR)
);
*/
CREATE TABLE CURSO(
  ID_CURSO INT(20) PRIMARY KEY AUTO_INCREMENT,
  NM_CURSO VARCHAR(30) NOT NULL,
  FK_CURSO_TIPO INT,
  FK_CURSO_INSTRUTOR INT,
  VALOR VARCHAR (1000) NOT NULL
);

/*
CREATE TABLE PEDIDO_DETALHE(
  FK_PEDIDO_DETALHE_PEDIDO INT, 
  FK_PEDIDO_DETALHE_CURSO INT,
  VALOR VARCHAR (1000) NOT NULL,
  FOREIGN KEY (FK_PEDIDO_DETALHE_PEDIDO) REFERENCES PEDIDO(IDPEDIDO),
  FOREIGN KEY (FK_PEDIDO_DETALHE_CURSO) REFERENCES CURSO(IDCURSO)
);
*/
CREATE TABLE PEDIDO_DETALHE(
  FK_PEDIDO_DETALHE_PEDIDO INT, 
  FK_PEDIDO_DETALHE_CURSO INT,
  VALOR VARCHAR (1000) NOT NULL
);

SHOW TABLES;

DESC TIPO;
DESC INSTRUTOR;
DESC ALUNO;
DESC PEDIDO;
DESC CURSO;
DESC PEDIDO_DETALHE;

/* CONSTRAINTS */

ALTER TABLE PEDIDO
ADD CONSTRAINT FK_PEDIDO_ALUNO
FOREIGN KEY (FK_PEDIDO_ALUNO)
REFERENCES ALUNO(ID_ALUNO);

ALTER TABLE CURSO
ADD CONSTRAINT FK_CURSO_TIPO
FOREIGN KEY (FK_CURSO_TIPO)
REFERENCES TIPO(ID_TIPO);

ALTER TABLE CURSO
ADD CONSTRAINT FK_CURSO_INSTRUTOR
FOREIGN KEY (FK_CURSO_INSTRUTOR)
REFERENCES INSTRUTOR(ID_INSTRUTOR);

ALTER TABLE PEDIDO_DETALHE
ADD CONSTRAINT FK_PEDIDO_DETALHE_PEDIDO
FOREIGN KEY (FK_PEDIDO_DETALHE_PEDIDO)
REFERENCES PEDIDO(ID_PEDIDO);

ALTER TABLE PEDIDO_DETALHE
ADD CONSTRAINT FK_PEDIDO_DETALHE_CURSO
FOREIGN KEY (FK_PEDIDO_DETALHE_CURSO)
REFERENCES CURSO(ID_CURSO);


DESC TIPO;
DESC INSTRUTOR;
DESC ALUNO;
DESC PEDIDO;
DESC CURSO;
DESC PEDIDO_DETALHE;

SELECT * FROM TIPO;

INSERT INTO TIPO VALUES (NULL, 'Banco de dados');
INSERT INTO TIPO VALUES (NULL, 'Programacao');
INSERT INTO TIPO VALUES (NULL, 'Modelagem de dados');
INSERT INTO TIPO VALUES (NULL, 'Designer grafico');

SELECT * FROM TIPO;

INSERT INTO INSTRUTOR VALUES (NULL, 'Fernando Dias', 1111-1111);

SELECT * FROM INSTRUTOR
WHERE NM_INSTRUTOR = 'Fernando Dias';

UPDATE INSTRUTOR
SET TELEFONE = '1111-1111'
WHERE ID_INSTRUTOR = '1';

INSERT INTO INSTRUTOR VALUES (NULL, 'Carlos Emilio', '1212-1212');
INSERT INTO INSTRUTOR VALUES (NULL, 'Bruno Rodrigues', '1313-1313');

SELECT * FROM INSTRUTOR;

INSERT INTO ALUNO VALUES (NULL, 'Frederico','Rua XV de Novembro 72', 'Fre@leega.com.br');
INSERT INTO ALUNO VALUES (NULL, 'Wagner','Av. Paulista', 'Wagner@leega.com.br');
INSERT INTO ALUNO VALUES (NULL, 'Douglas', 'Rua Lajes 103, ap:701', 'Douglas@leega.com.br');
INSERT INTO ALUNO VALUES (NULL, 'Alexandre', 'Rua Tauney 22', 'Ale@leega.com.br');
INSERT INTO ALUNO VALUES (NULL, 'Mariana', 'Rua Salles 305', 'Mariana@leega.com.br');
INSERT INTO ALUNO VALUES (NULL, 'Samuel', 'Av. Central 30', 'Samuel@leega.com.br');
INSERT INTO ALUNO VALUES (NULL, 'Daniel', 'Alfredo Ometecidio 26', 'Daniel@leega.com.br');

SELECT * FROM ALUNO;

INSERT INTO PEDIDO VALUES (NULL, '2','15.04.2010', '11:23:32');
INSERT INTO PEDIDO VALUES (NULL, '2','15.04.2010', '14:36:21');
INSERT INTO PEDIDO VALUES (NULL, '3','16.04.2010', '11:17:45');
INSERT INTO PEDIDO VALUES (NULL, '4','17.04.2010', '14:27:22');
INSERT INTO PEDIDO VALUES (NULL, '5','18.04.2010', '11:18:19');
INSERT INTO PEDIDO VALUES (NULL, '6','19.04.2010', '13:47:35');
INSERT INTO PEDIDO VALUES (NULL, '6','20.04.2010', '18:13:44');
INSERT INTO PEDIDO VALUES (NULL, '7','25.07.2012', '20:00:24');
INSERT INTO PEDIDO VALUES (NULL, '7','26.07.2012', '21:00:25');

SELECT * FROM PEDIDO;

INSERT INTO CURSO VALUES (NULL, 'Java Fundamentos','2', '2', '270');
INSERT INTO CURSO VALUES (NULL, 'Java Avançado','2', '2', '330');
INSERT INTO CURSO VALUES (NULL, 'SQL Completo','1', '1', '170');
INSERT INTO CURSO VALUES (NULL, 'Php Básico','2', '1', '270');
INSERT INTO CURSO VALUES (NULL, 'Java Script','3', '3', '250');
INSERT INTO CURSO VALUES (NULL, 'Teste','3', '3', '170');
INSERT INTO CURSO VALUES (NULL, 'Teste2','2', '2', '250');
INSERT INTO CURSO VALUES (NULL, 'Teste3','1', '3', '250');
INSERT INTO CURSO VALUES (NULL, 'Teste4','3', '3', '250');

SELECT * FROM CURSO;

INSERT INTO PEDIDO_DETALHE VALUES ('1', '1','270');
INSERT INTO PEDIDO_DETALHE VALUES ('1', '2','330');
INSERT INTO PEDIDO_DETALHE VALUES ('2', '1','270');
INSERT INTO PEDIDO_DETALHE VALUES ('2', '2','330');
INSERT INTO PEDIDO_DETALHE VALUES ('2', '3','170');
INSERT INTO PEDIDO_DETALHE VALUES ('3', '4','270');
INSERT INTO PEDIDO_DETALHE VALUES ('9', '7','330');
INSERT INTO PEDIDO_DETALHE VALUES ('4', '2','330');
INSERT INTO PEDIDO_DETALHE VALUES ('4', '4','270');
INSERT INTO PEDIDO_DETALHE VALUES ('5', '3','170');
INSERT INTO PEDIDO_DETALHE VALUES ('6', '3','170');
INSERT INTO PEDIDO_DETALHE VALUES ('7', '4','270');
INSERT INTO PEDIDO_DETALHE VALUES ('9', '7','330');

SELECT * FROM PEDIDO_DETALHE;

/* QUESTAO 1

SELECT NM_CURSO 
FROM CURSO
WHERE VALOR>270; 


  QUESTAO 2

SELECT NM_CURSO 
FROM CURSO
WHERE ID_CURSO=3; 


 QUESTAO 3

SELECT EMAIL, ENDERECO 
FROM ALUNO
WHERE NM_ALUNO = 'Daniel'; 

SELECT EMAIL, ENDERECO 
FROM ALUNO
WHERE ID_ALUNO = 7; 



  QUESTAO 4

SELECT NM_CURSO
FROM CURSO
WHERE NM_CURSO LIKE 'Java%';



  QUESTAO 5

SELECT NM_CURSO
FROM CURSO
WHERE FK_CURSO_INSTRUTOR = 1 AND FK_CURSO_TIPO = 1;

*/

/* QUESTAO 1 ****

SELECT COUNT(FK_PEDIDO_DETALHE_CURSO) AS "QUANTIDADE_ALUNOS"
FROM PEDIDO_DETALHE
GROUP BY FK_PEDIDO_DETALHE_CURSO;

SELECT (D.FK_PEDIDO_DETALHE_CURSO), (C.NM_CURSO)
FROM CURSO C
INNER JOIN PEDIDO_DETALHE D
ON C.ID_CURSO = D.FK_PEDIDO_DETALHE_CURSO; 

  QUESTAO 2

SELECT AVG(VALOR)
FROM CURSO;

  QUESTAO 3

SELECT MIN(VALOR)
FROM CURSO;

  QUESTAO 4

SELECT NM_INSTRUTOR
FROM INSTRUTOR
ORDER BY NM_INSTRUTOR ASC LIMIT 1;

SELECT NM_INSTRUTOR
FROM INSTRUTOR
ORDER BY ID_INSTRUTOR DESC LIMIT 1;

*/

/* QUESTAO 1 

SELECT UCASE (NM_ALUNO)
FROM ALUNO
ORDER BY ID_ALUNO DESC LIMIT 7;

  QUESTAO 2 ********* 



 
  QUESTAO 3 

SELECT NOW() AS DATA_ATUAL;

*/
 
 /* QUESTAO 1 

SELECT * FROM ALUNO;

 QUESTAO 2 

SELECT NM_CURSO
FROM CURSO;

  QUESTAO 3

SELECT NM_CURSO, VALOR AS PRECO
FROM CURSO
WHERE VALOR > 200;

  QUESTAO 4

SELECT NM_CURSO, VALOR AS PRECO
FROM CURSO
WHERE VALOR > 200 AND VALOR < 300;

  QUESTAO 5

SELECT ID_PEDIDO, DATA
FROM PEDIDO
WHERE DATA BETWEEN '2010-04-15' AND '2010-04-18';

SELECT ID_PEDIDO, DATA
FROM PEDIDO
WHERE DATA BETWEEN '2016-04-20' AND '2019-04-20';

  QUESTAO 6

SELECT ID_PEDIDO, DATA
FROM PEDIDO
WHERE DATA = '2010-04-15';

SELECT ID_PEDIDO, DATA
FROM PEDIDO
WHERE DATA = '2025-07-20';
*/

/* QUESTAO 1 

SELECT * FROM PEDIDO_DETALHE;

SELECT FK_PEDIDO_DETALHE_PEDIDO AS PEDIDOS_AGRUPADOS, MAX(VALOR) AS "MAIS CARO Q 300"
FROM PEDIDO_DETALHE
GROUP BY FK_PEDIDO_DETALHE_PEDIDO
HAVING MAX(VALOR)>300;
*/

/* QUESTAO 1 

SELECT ENDERECO
FROM ALUNO
WHERE NM_ALUNO='Frederico';

UPDATE ALUNO
SET ENDERECO='Av. Brasil 778'
WHERE NM_ALUNO='Frederico';

SELECT * FROM ALUNO;

  QUESTAO 2 

UPDATE ALUNO
SET EMAIL= 'Alexandre@leega.com.br'
WHERE NM_ALUNO ='Alexandre';

  QUESTAO 3 

SELECT * FROM CURSO;

UPDATE CURSO
SET VALOR = VALOR*1.1
WHERE VALOR < 300;

UPDATE PEDIDO_DETALHE
SET VALOR = VALOR*1.1
WHERE VALOR < 300;

  QUESTAO 4

SELECT * FROM CURSO;

UPDATE CURSO
SET NM_CURSO ='Php Fundamentos'
WHERE NM_CURSO ='Php Básico';

SELECT * FROM CURSO;
*/

/* QUESTAO 1 

SELECT * FROM TIPO;

DELETE FROM TIPO
WHERE NM_TIPO='Designer gráfico';

  QUESTAO 2 

SELECT * FROM ALUNO;

DELETE FROM ALUNO
WHERE ID_ALUNO='7';

DELETE FROM ALUNO
WHERE NM_ALUNO='Daniel';

  QUESTAO 3 

SELECT * FROM CURSO;

DELETE FROM CURSO
WHERE ID_CURSO='5' AND NM_CURSO='Java Script';
  
*/

/* QUESTAO 1 

ALTER TABLE ALUNO
ADD DATA_NASCIMENTO VARCHAR(10);

  QUESTAO 2 

ALTER TABLE ALUNO
CHANGE DATA_NASCIMENTO NASCIMENTO DATE;

  QUESTAO 3 

ALTER TABLE ALUNO
ADD INDEX alunoInd(NM_ALUNO);

  QUESTAO 4

DESC INSTRUTOR;

ALTER TABLE INSTRUTOR
ADD EMAIL VARCHAR(100);

  QUESTAO 5

ALTER TABLE CURSO
ADD INDEX cursoInd(FK_CURSO_INSTRUTOR);

*/

/* QUESTAO 1 

DESC INSTRUTOR;

ALTER TABLE INSTRUTOR
DROP EMAIL;

  QUESTAO 2 

DESC ALUNO;

ALTER TABLE ALUNO
DROP NASCIMENTO;
*/

/* JOINS -- INNER JOIN

  QUESTAO 1 
SELECT * FROM CURSO;
SELECT * FROM TIPO;

SELECT C.NM_CURSO AS 'TÍTULOS', T.NM_TIPO AS 'TIPOS'
FROM CURSO C
INNER JOIN TIPO T
ON T.ID_TIPO = C.FK_CURSO_TIPO;

  QUESTAO 2 
SELECT * FROM CURSO;
SELECT * FROM TIPO;
SELECT * FROM INSTRUTOR;

SELECT C.NM_CURSO AS 'TÍTULOS', T.NM_TIPO AS 'TIPOS', I.NM_INSTRUTOR AS 'NOME_INSTRUTOR', I.TELEFONE AS 'TEL_INSTRUTOR'
FROM CURSO C
INNER JOIN TIPO T
ON T.ID_TIPO = C.FK_CURSO_TIPO
INNER JOIN INSTRUTOR I
ON I.ID_INSTRUTOR = C.FK_CURSO_INSTRUTOR;

  QUESTAO 3 

SELECT P.ID_PEDIDO, P.DATA, P.HORA, A.NM_ALUNO
FROM PEDIDO P
INNER JOIN ALUNO A
ON P.FK_PEDIDO_ALUNO = A.ID_ALUNO;


SELECT P.ID_PEDIDO, P.DATA, P.HORA, A.NM_ALUNO, C.NM_CURSO AS 'TITULO'
FROM PEDIDO P
INNER JOIN ALUNO A
ON P.FK_PEDIDO_ALUNO = A.ID_ALUNO
INNER JOIN CURSO C
ON C.ID_CURSO = P.ID_PEDIDO;


  QUESTAO 4
DESC PEDIDO_DETALHE;

SELECT D.FK_PEDIDO_DETALHE_PEDIDO AS 'NUM_PEDIDO', A.NM_ALUNO, D.VALOR
FROM PEDIDO_DETALHE D
INNER JOIN ALUNO A
ON D.FK_PEDIDO_DETALHE_PEDIDO = A.ID_ALUNO;

SELECT D.FK_PEDIDO_DETALHE_PEDIDO AS 'NUM_PEDIDO', A.NM_ALUNO, SUM(D.VALOR)
FROM PEDIDO_DETALHE D
INNER JOIN ALUNO A
ON D.FK_PEDIDO_DETALHE_PEDIDO = A.ID_ALUNO
GROUP BY D.FK_PEDIDO_DETALHE_PEDIDO
HAVING SUM(D.VALOR)>500; 

  QUESTAO 5

SELECT D.FK_PEDIDO_DETALHE_PEDIDO AS 'PEDIDO', A.NM_ALUNO AS 'NOME'
FROM PEDIDO_DETALHE D
INNER JOIN ALUNO A
ON D.FK_PEDIDO_DETALHE_PEDIDO = A.ID_ALUNO;


SELECT D.FK_PEDIDO_DETALHE_PEDIDO AS 'PEDIDO', A.NM_ALUNO AS 'NOME', COUNT(A.NM_ALUNO) AS 'QTD_C_PEDIDO'
FROM PEDIDO_DETALHE D
INNER JOIN ALUNO A
ON D.FK_PEDIDO_DETALHE_PEDIDO = A.ID_ALUNO
GROUP BY A.NM_ALUNO
HAVING COUNT(D.FK_PEDIDO_DETALHE_PEDIDO)>=2
ORDER BY A.NM_ALUNO DESC
LIMIT 4; 


SELECT D.FK_PEDIDO_DETALHE_PEDIDO AS 'PEDIDO', A.NM_ALUNO AS 'NOME', COUNT(A.NM_ALUNO) AS 'QTD_C_PEDIDO'
FROM PEDIDO_DETALHE D
INNER JOIN ALUNO A
ON D.FK_PEDIDO_DETALHE_PEDIDO = A.ID_ALUNO
GROUP BY D.FK_PEDIDO_DETALHE_PEDIDO
HAVING COUNT(A.NM_ALUNO)>=2
ORDER BY A.NM_ALUNO ASC 
LIMIT 4; 

*/

/* JOINS -- LEFT JOIN // RIGHT JOIN

  QUESTÃO 1

SELECT IFNULL(P.DATA,'SEM_DATA'), IFNULL(P.HORA,'SEM_HORA'), A.EMAIL, A.ENDERECO, A.NM_ALUNO
FROM PEDIDO P
RIGHT JOIN  ALUNO A
ON P.FK_PEDIDO_ALUNO = A.ID_ALUNO;

  QUESTÃO 2

SELECT C.NM_CURSO, IFNULL(D.FK_PEDIDO_DETALHE_CURSO, 'SEM_ID') 
FROM CURSO C
LEFT JOIN  PEDIDO_DETALHE D
ON C.ID_CURSO = D.FK_PEDIDO_DETALHE_CURSO;

  QUESTÃO 3 **** LEFT JOIN UNION RIGHT JOIN ******

SELECT A.ID_ALUNO, A.NM_ALUNO, A.ENDERECO, A.EMAIL, P.ID_PEDIDO
FROM ALUNO A
LEFT JOIN PEDIDO P
ON A.ID_ALUNO = P.FK_PEDIDO_ALUNO;
UNION
RIGHT JOIN;


VIEW

QUESTAO 1

CREATE VIEW CURSOS_DE_PROGRAMACAO AS 
SELECT NM_CURSO AS 'TITULO', VALOR AS 'PRECO' 
FROM CURSO
WHERE FK_CURSO_TIPO = 2; 

SELECT * FROM CURSOS_DE_PROGRAMACAO;

QUESTAO 2

CREATE VIEW RESUMO_CURSOS_PROF AS 
SELECT C.NM_CURSO AS 'TITULOS', T.NM_TIPO AS 'TIPO_DO_CURSO', I.NM_INSTRUTOR AS 'PROFESSOR' 
FROM CURSO C
INNER JOIN INSTRUTOR I
ON I.ID_INSTRUTOR = C.FK_CURSO_INSTRUTOR 
INNER JOIN TIPO T
ON T.ID_TIPO = C.FK_CURSO_TIPO;

SELECT * FROM RESUMO_CURSOS_PROF;

QUESTAO 3

CREATE VIEW PEDIDOS_REALIZADOS AS 
SELECT A.NM_ALUNO AS 'NOME_ALUNO', P.DATA, P.ID_PEDIDO
FROM ALUNO A
INNER JOIN PEDIDO P
ON A.ID_ALUNO = P.FK_PEDIDO_ALUNO
ORDER BY P.ID_PEDIDO;

SELECT * FROM PEDIDOS_REALIZADOS;



SUBQUERIES

QUESTAO 1

SELECT NM_CURSO AS 'CURSOS_DISPONIVEIS', VALOR AS MENOR_VALOR_VENDA
FROM CURSO
WHERE VALOR
IN (SELECT VALOR
FROM CURSO
GROUP BY NM_CURSO
HAVING MIN(VALOR));


QUESTAO 2

SELECT ID_TIPO
FROM TIPO
WHERE NM_TIPO = 'Programacao';

SELECT NM_CURSO AS 'CURSOS_DISPONIVEIS'
FROM CURSO
WHERE FK_CURSO_TIPO
IN (SELECT ID_TIPO
FROM TIPO
WHERE NM_TIPO = 'Programacao');


QUESTAO 3

(SELECT C.ID_CURSO, I.NM_INSTRUTOR
FROM CURSO C
INNER JOIN INSTRUTOR I
WHERE C.FK_CURSO_INSTRUTOR = I.ID_INSTRUTOR) TEMP;


SELECT TEMP.NM_INSTRUTOR, TRUNCATE(SUM(D.VALOR),2) AS SOMAT_VALOR
FROM PEDIDO_DETALHE D
INNER JOIN (
            (SELECT C.ID_CURSO, I.NM_INSTRUTOR
             FROM CURSO C
             INNER JOIN INSTRUTOR I
             WHERE C.FK_CURSO_INSTRUTOR = I.ID_INSTRUTOR) TEMP)
ON TEMP.ID_CURSO = D.FK_PEDIDO_DETALHE_CURSO
GROUP BY D.FK_PEDIDO_DETALHE_CURSO
ORDER BY TEMP.NM_INSTRUTOR DESC;


QUESTAO 4

(SELECT D.FK_PEDIDO_DETALHE_PEDIDO, TRUNCATE(SUM(D.VALOR),2) AS 'SOMA_VALORES'
FROM PEDIDO_DETALHE D
GROUP BY D.FK_PEDIDO_DETALHE_PEDIDO) TEMP;


(SELECT A.NM_ALUNO, SUM(TEMP.SOMA_VALORES) AS 'SOMAT_VALOR_ALUNO'
FROM PEDIDO P
INNER JOIN (
            (SELECT D.FK_PEDIDO_DETALHE_PEDIDO, TRUNCATE(SUM(D.VALOR),2) AS 'SOMA_VALORES'
             FROM PEDIDO_DETALHE D
             GROUP BY D.FK_PEDIDO_DETALHE_PEDIDO) TEMP)
ON TEMP.FK_PEDIDO_DETALHE_PEDIDO = P.ID_PEDIDO
INNER JOIN ALUNO A
ON A.ID_ALUNO = P.FK_PEDIDO_ALUNO
GROUP BY A.NM_ALUNO);


CREATE VIEW GASTOS_ALUNOS AS
(SELECT A.NM_ALUNO, SUM(TEMP.SOMA_VALORES) AS 'SOMAT_VALOR_ALUNO'
FROM PEDIDO P
INNER JOIN (
            (SELECT D.FK_PEDIDO_DETALHE_PEDIDO, TRUNCATE(SUM(D.VALOR),2) AS 'SOMA_VALORES'
             FROM PEDIDO_DETALHE D
             GROUP BY D.FK_PEDIDO_DETALHE_PEDIDO) TEMP)
ON TEMP.FK_PEDIDO_DETALHE_PEDIDO = P.ID_PEDIDO
INNER JOIN ALUNO A
ON A.ID_ALUNO = P.FK_PEDIDO_ALUNO
GROUP BY A.NM_ALUNO);

QUESTAO 5

SELECT AVG(VALOR) AS 'MEDIA_DOS_PRECOS'
FROM CURSO; 

SELECT UCASE (NM_CURSO) AS 'NOMES_CURSOS'
FROM CURSO
WHERE VALOR >= (SELECT AVG(VALOR) AS 'MEDIA_DOS_PRECOS'
FROM CURSO)
UNION
SELECT LCASE (NM_CURSO) AS 'NOMES_CURSOS'
FROM CURSO
WHERE VALOR < (SELECT AVG(VALOR) AS 'MEDIA_DOS_PRECOS'
FROM CURSO);

